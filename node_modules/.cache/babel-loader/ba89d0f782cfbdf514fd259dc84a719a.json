{"ast":null,"code":"var _jsxFileName = \"/Users/shawn/project/video-tutorial/junior-to-senior_web-developer/robot-friends/src/containers/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport { requestRobotsAction, setSearchField } from \"../action\";\nimport Header from \"../components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    isPending: state.requestRobots.isPending,\n    robots: state.requestRobots.robots\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobotsAction())\n  };\n};\n\nconst App = props => {\n  _s();\n\n  const {\n    searchField,\n    isPending,\n    robots,\n    onSearchChange,\n    onRequestRobots\n  } = props;\n  useEffect(() => {\n    onRequestRobots();\n  }, []);\n  const filteredRobots = robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\n  });\n  return isPending ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tc\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      searchChange: onSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n      children: /*#__PURE__*/_jsxDEV(CardList, {\n        robots: filteredRobots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","useEffect","useState","CardList","SearchBox","Scroll","connect","requestRobotsAction","setSearchField","Header","mapStateToProps","state","searchField","searchRobots","isPending","requestRobots","robots","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","props","filteredRobots","filter","robot","name","toLowerCase","includes"],"sources":["/Users/shawn/project/video-tutorial/junior-to-senior_web-developer/robot-friends/src/containers/App.js"],"sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport { requestRobotsAction, setSearchField } from \"../action\";\nimport Header from \"../components/Header\";\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchRobots.searchField,\n    isPending: state.requestRobots.isPending,\n    robots: state.requestRobots.robots,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobotsAction()),\n  };\n};\n\nconst App = (props) => {\n  const { searchField, isPending, robots, onSearchChange, onRequestRobots } = props;\n\n  useEffect(() => {\n    onRequestRobots();\n  }, []);\n\n  const filteredRobots = robots.filter((robot) => {\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\n  });\n\n  return isPending ? (\n    <h1>Loading</h1>\n  ) : (\n    <div className=\"tc\">\n      <Header />\n      <SearchBox searchChange={onSearchChange} />\n      <Scroll>\n        <CardList robots={filteredRobots} />\n      </Scroll>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,EAA8BC,cAA9B,QAAoD,WAApD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;EACjC,OAAO;IACLC,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD3B;IAELE,SAAS,EAAEH,KAAK,CAACI,aAAN,CAAoBD,SAF1B;IAGLE,MAAM,EAAEL,KAAK,CAACI,aAAN,CAAoBC;EAHvB,CAAP;AAKD,CAND;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;EACvC,OAAO;IACLC,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAD9B;IAELC,eAAe,EAAE,MAAML,QAAQ,CAACX,mBAAmB,EAApB;EAF1B,CAAP;AAID,CALD;;AAOA,MAAMiB,GAAG,GAAIC,KAAD,IAAW;EAAA;;EACrB,MAAM;IAAEb,WAAF;IAAeE,SAAf;IAA0BE,MAA1B;IAAkCG,cAAlC;IAAkDI;EAAlD,IAAsEE,KAA5E;EAEAxB,SAAS,CAAC,MAAM;IACdsB,eAAe;EAChB,CAFQ,EAEN,EAFM,CAAT;EAIA,MAAMG,cAAc,GAAGV,MAAM,CAACW,MAAP,CAAeC,KAAD,IAAW;IAC9C,OAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCnB,WAAW,CAACkB,WAAZ,EAAlC,CAAP;EACD,CAFsB,CAAvB;EAIA,OAAOhB,SAAS,gBACd;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADc,gBAGd;IAAK,SAAS,EAAC,IAAf;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAW,YAAY,EAAEK;IAAzB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MAAA,uBACE,QAAC,QAAD;QAAU,MAAM,EAAEO;MAAlB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QAHF;AAWD,CAtBD;;GAAMF,G;;KAAAA,G;AAwBN,eAAelB,OAAO,CAACI,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf"},"metadata":{},"sourceType":"module"}